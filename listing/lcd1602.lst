C51 COMPILER V9.60.0.0   LCD1602                                                           12/13/2020 01:17:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\output\lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\source\lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..
                    -\listing\lcd1602.lst) TABS(2) OBJECT(..\output\lcd1602.obj)

line level    source

   1          #include <reg52.h>
   2          #include "lcd1602.h"
   3          #include <string.h>
   4          #include <intrins.h>
   5          
   6          uchar code table0[] = {"O: I: L: H: D:  "};
   7          uchar code table2[] = {"0123456789"};
   8          uchar dis[3];
   9          uchar num = 0;
  10          
  11          
  12          /*初始化LCD1602的设置*/
  13          void LCDInit(){
  14   1        uchar i;
  15   1        lcden = 0; // 拉低使能端，准备产生使能高脉冲信号
  16   1        writeCommand(0x38); // 显示模式设置(16x2， 5x7点阵，8位数据接口)
  17   1        writeCommand(0x0c); // 开显示，不显示光标
  18   1        writeCommand(0x06); // 写一个字符后地址指针自动加1
  19   1        writeCommand(0x01); // 显示清零，数据指针清零
  20   1        
  21   1        /*LCD上电界面*/
  22   1        writeCommand(0x80); // 将数据指针定位到第一行首
  23   1        for(i = 0; i < strlen(table0); i++){
  24   2          writeDataLCD(table0[i]);
  25   2          delay(5);
  26   2        }
  27   1      
  28   1        writeCommand(0x80 + 0x40); // 将数据指针定位到第二行首
  29   1      
  30   1      }
  31          
  32          /*LCD显示函数*/
  33          void display(uint l,m,h,dat,zkb,sw){
  34   1        uint disINT = (uint)dat;
  35   1        uchar  i;
  36   1        dis[0] = l % 1000 / 100;
  37   1        dis[1] = l % 100 / 10;
  38   1        dis[2] = l % 10;
  39   1        for(i = 0; i < 3; i++){
  40   2          writeCommand(0x80 + 0x40 + i);
  41   2          writeDataLCD(table2[dis[i]]);
  42   2          delay(5);
  43   2        }
  44   1        dis[0] = m % 1000 / 100;
  45   1        dis[1] = m % 100 / 10;
  46   1        dis[2] = m % 10;
  47   1        for(i = 0; i < 3; i++){
  48   2          writeCommand(0x80 + 0x40 + 3 + i);
  49   2          writeDataLCD(table2[dis[i]]);
  50   2          delay(5);
  51   2        }
  52   1        dis[0] = h % 1000 / 100;
  53   1        dis[1] = h % 100 / 10;
  54   1        dis[2] = h % 10;
C51 COMPILER V9.60.0.0   LCD1602                                                           12/13/2020 01:17:49 PAGE 2   

  55   1        for(i = 0; i < 3; i++){
  56   2          writeCommand(0x80 + 0x40 + 6 + i);
  57   2          writeDataLCD(table2[dis[i]]);
  58   2          delay(5);
  59   2        }
  60   1        dis[0] = disINT % 1000 / 100;
  61   1        dis[1] = disINT % 100 / 10;
  62   1        dis[2] = disINT % 10;
  63   1        for(i = 0; i < 3; i++){
  64   2          writeCommand(0x80 + 0x40 + 9 + i);
  65   2          writeDataLCD(table2[dis[i]]);
  66   2          delay(5);
  67   2        }
  68   1          sw=sw%10;
  69   1          writeCommand(0x80 + 0x40 + 12);
  70   1          writeDataLCD(table2[sw]);
  71   1          delay(5);
  72   1        dis[0] = zkb  %100/ 10 ;
  73   1        dis[1] = zkb %  10;
  74   1        for(i = 0; i < 2; i++){
  75   2          writeCommand(0x80 + 0x40 + 13 + i);
  76   2          writeDataLCD(table2[dis[i]]);
  77   2          delay(5);
  78   2        }
  79   1        }
  80          
  81          
  82          /*写指令函数*/
  83          void writeCommand(unsigned char command)
  84            {
  85   1        lcdrs = 0; // 命令选择
  86   1        lcdrw = 0;
  87   1        P0 = command;
  88   1        delay(5);
  89   1        
  90   1        lcden = 1; // 产生一个正脉冲使能信号
  91   1        delay(5);
  92   1        lcden = 0;
  93   1      }
  94          
  95          /*写数据函数*/
  96          void writeDataLCD(uchar dat){
  97   1        lcdrs = 1; // 数据选择
  98   1        lcdrw = 0;
  99   1      
 100   1        P0 = dat;
 101   1        delay(5);
 102   1      
 103   1        lcden = 1;
 104   1        delay(5);
 105   1        lcden = 0;
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    673    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.0.0   LCD1602                                                           12/13/2020 01:17:49 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
